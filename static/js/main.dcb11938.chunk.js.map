{"version":3,"sources":["containers/App.css","conponents/textPanel/textPanel.css","conponents/styleController/styleController.css","conponents/textPanel/panelUnit/panelUnit.css","conponents/styleController/fontCategoryController/fontCategoryController.css","conponents/textPanel/panelUnit/panelUnit.js","conponents/textPanel/textPanel.js","store/styleControl/action/actionCreator/actionCreator.js","store/styleControl/action/actionType/actionType.js","conponents/styleController/fontSizeController/fontSizeController.js","outsideClicker/outsideClicker.js","conponents/styleController/colorPicker/colorPicker.js","conponents/styleController/textColorController/textColorController.js","conponents/styleController/backgroundColorController/backgroundColorController.js","conponents/styleController/fontFamilyController/fontFamilyController.js","conponents/styleController/fontVariantsController/fontVariantsController.js","conponents/styleController/fontCategoryController/fontCategoryItem/fontCategoryItem.js","conponents/styleController/fontCategoryController/fontCategoryController.js","axios/axios.js","conponents/styleController/styleController.js","containers/App.js","store/styleControl/reducer/reducer.js","serviceWorker.js","index.js","conponents/styleController/colorPicker/colorPicker.css","conponents/styleController/fontSizeController/fontSizeController.css","conponents/styleController/textColorController/textColorController.css","conponents/styleController/backgroundColorController/backgroundColorController.css","conponents/styleController/fontFamilyController/fontFamilyController.css","conponents/styleController/fontVariantsController/fontVariantsController.css","conponents/styleController/fontCategoryController/fontCategoryItem/fontCategoryItem.css"],"names":["module","exports","App","Panel","StyleController","PanelUnit","PanelUnitFrame","TextArea","PanelUnitHeader","Add_Button","Delete_Button","FontCategoryController","Lable","CategoryItems","CategoryItem","FontCategoryWrapper","panelUnit","props","styleData","fontSize","concat","color","r","g","b","a","backgroundColor","fontCategory","fontFamily","fontVariant","fontStyle","react_default","createElement","onClick","panelUnitChanged","className","classes","style","type","addPanelUnit","panelId","deletePanelUnit","TextPanel","state","panelUnitStyleGroup","panelStyle","_this","reduce","maxId","el","newGroup","Object","toConsumableArray","push","setState","index","findIndex","unit","splice","panelUnitChangedHandler","panelChanged","_this2","this","newStyleData","objectSpread","newPanelUnitStyleGroup","panelUnitIndex","panelUnitStyle","newPanelUnitStyle","_this3","_this4","panelUnits","map","textPanel_panelUnit_panelUnit","key","Component","connect","styleControl","dispatch","data","fontSizeController","FontSizeController","FontSizeLabel","FontSizeInput","value","sizeValue","onChange","fontSizeChangedHandler","min","max","OutSideClicker","children_ref","setWrapperRef","node","wrapperRef","outsideClickHandler","event","contains","target","console","log","forEach","child_ref","current","handleClickOutside","document","addEventListener","removeEventListener","length","i","React","Children","count","children","createRef","child","cloneElement","ref","width","height","ColorPicker","displayColorPicker","pickerIconColor","handleColorChange","colorChangedHandler","rgb","ColorPickerToggleHandler","prevState","colorStyle","PickerIcon","ColorPickerIcon","BackgroundColor","SketchPicker","lib","textColorController","TextColorController","TextColorLabel","outsideClicker","colorPicker_colorPicker","BackgroundColorController","fontFamilyController","FontFamilyController","FontFamilyLabel","FontFamilySelector","react_select_esm","options","fontVariantsController","FontVariantsController","FontVariantsLabel","FontVariantsSelector","isDisabled","fontCategoryItem","attachedClasses","ItemLable","checked","ItemChecked","join","name","fontCategoryController","categoryItems","item","fontCategoryController_fontCategoryItem_fontCategoryItem","categoryValue","instance","axios","create","baseURL","availableFontCategory","availableFontFamilies","availableFontVariants","componentDidUpdate","new_families","fontData","filter","font","category","just_familyName_new","FontFamily","family","just_familyName_prev","new_variants","find","variants","new_availableFontVariants","componentDidMount","get","then","response","items","slice","fontDataLoad","Set","DataItem","add","catch","err","fontSizeChanged","colorChanged","backgroundColorChangedHandler","backgroundColorChanged","fontCategoryChangedHandler","fontCategoryChanged","fontFamilySelectedHandler","fontFamilyChanged","fontVariantsSelectedHandler","fontVariantsChanged","familyOptions","label","varientsOptions","FontVarient","styleController_fontCategoryController_fontCategoryController","sort","localeCompare","styleController_fontFamilyController_fontFamilyController","styleController_fontVariantsController_fontVariantsController","FontVariants","styleController_fontSizeController_fontSizeController","styleController_textColorController_textColorController","backgroundColorController_backgroundColorController","styleControlActionCreator","fontVariants","textPanel_textPanel","styleController_styleController","initialState","isFontVariantsDisplayClear","reducer","newPanelStyle","arguments","undefined","action","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","styleControlReducer","store","createStore","applyMiddleware","thunk","app","es","src_containers_App","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcb11938.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__3t9oX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"textPanel__Panel__2atjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StyleController\":\"styleController__StyleController__1zLnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PanelUnit\":\"panelUnit__PanelUnit__WhpD8\",\"PanelUnitFrame\":\"panelUnit__PanelUnitFrame__3z_fX\",\"TextArea\":\"panelUnit__TextArea__3HIjn\",\"PanelUnitHeader\":\"panelUnit__PanelUnitHeader__26Rz5\",\"Add_Button\":\"panelUnit__Add_Button__2zsM4\",\"Delete_Button\":\"panelUnit__Delete_Button__14LOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontCategoryController\":\"fontCategoryController__FontCategoryController__3OuDn\",\"Lable\":\"fontCategoryController__Lable__2FWvT\",\"CategoryItems\":\"fontCategoryController__CategoryItems__1szq_\",\"CategoryItem\":\"fontCategoryController__CategoryItem__14Sxe\",\"FontCategoryWrapper\":\"fontCategoryController__FontCategoryWrapper__28Ow_\"};","import React from 'react';\r\nimport classes from './panelUnit.css';\r\nconst panelUnit = (props) => {\r\n\r\n    const styleData = {\r\n\r\n        fontSize: `${props.styleData.fontSize}px`,\r\n        color: `rgba(${props.styleData.color.r}, ${props.styleData.color.g}, ${props.styleData.color.b}, ${props.styleData.color.a})`,\r\n        backgroundColor: `rgba(${props.styleData.backgroundColor.r}, ${props.styleData.backgroundColor.g}, ${props.styleData.backgroundColor.b}, ${props.styleData.backgroundColor.a})`,\r\n        fontCategory: `${props.styleData.fontCategory}`,\r\n        fontFamily: `${props.styleData.fontFamily}`,\r\n    }\r\n\r\n    if(props.styleData.fontVariant === 'regular'){\r\n        styleData.fontStyle = 'normal';\r\n    }\r\n    if(props.styleData.fontVariant === 'italic'){\r\n        styleData.fontStyle = 'italic';\r\n    }\r\n    \r\n\r\n    return ( \r\n        <div onClick={props.panelUnitChanged} className={classes.PanelUnit}>\r\n            <div className={classes.PanelUnitFrame}>\r\n                <ul className={classes.PanelUnitHeader}>\r\n                    <li>{props.styleData.fontSize}</li>\r\n                    <li>{props.styleData.fontFamily==='' ? 'Oswald' : props.styleData.fontFamily}</li>\r\n                    <li>{props.styleData.fontVariant==='' ? 'Regular' : props.styleData.fontVariant}</li>\r\n                </ul>\r\n                <textarea style={styleData} type='textarea' className={classes.TextArea} />\r\n                <div>\r\n                    <button className={classes.Add_Button} onClick={props.addPanelUnit}>Add</button>\r\n                    {props.panelId!==0 ? <button className={classes.Delete_Button} onClick={()=> props.deletePanelUnit(props.panelId)}>close</button> : null }\r\n                </div>\r\n            </div>\r\n            \r\n        </div>       \r\n            \r\n\r\n    );\r\n};\r\n\r\nexport default panelUnit;","import React, {Component} from 'react';\r\nimport PanelUnit from './panelUnit/panelUnit';\r\nimport {connect} from  'react-redux';\r\nimport classes from './textPanel.css';\r\nimport * as styleControlActionCreator from '../../store/styleControl/action/actionCreator/actionCreator';\r\n\r\nclass TextPanel extends Component {\r\n\r\n    state = {\r\n        panelUnitStyleGroup: [\r\n            {\r\n                panelId: 0,\r\n                styleData: {\r\n                    fontSize: 10,\r\n                    fontCategory: 'All',\r\n                    fontFamily: '',\r\n                    fontVariant: '',\r\n                    color: {\r\n                        r: '0',\r\n                        g: '0',\r\n                        b: '0',\r\n                        a: '1',\r\n                    },\r\n                    backgroundColor: {\r\n                        r: '255',\r\n                        g: '255',\r\n                        b: '255',\r\n                        a: '1',\r\n                    },\r\n                },             \r\n            },\r\n            {\r\n                panelId: 1,\r\n                styleData: {\r\n                    fontSize: 20,\r\n                    fontCategory: 'All',\r\n                    fontFamily: '',\r\n                    fontVariant: '',\r\n                    color: {\r\n                        r: '0',\r\n                        g: '0',\r\n                        b: '0',\r\n                        a: '1',\r\n                    },\r\n                    backgroundColor: {\r\n                        r: '255',\r\n                        g: '255',\r\n                        b: '255',\r\n                        a: '1',\r\n                    },\r\n                },\r\n            }\r\n        ]\r\n    };\r\n\r\n    componentDidMount () {\r\n        const newStyleData =  {...this.props.panelStyle.styleData};\r\n        const newPanelUnitStyleGroup = [...this.state.panelUnitStyleGroup];\r\n        const panelUnitIndex= newPanelUnitStyleGroup.findIndex(panelUnitStyle=> panelUnitStyle.panelId===this.props.panelStyle.panelId);\r\n        const newPanelUnitStyle = {...newPanelUnitStyleGroup[panelUnitIndex], styleData: newStyleData};\r\n        newPanelUnitStyleGroup[panelUnitIndex] = newPanelUnitStyle;\r\n        this.setState({panelUnitStyleGroup: newPanelUnitStyleGroup});\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        const index = this.state.panelUnitStyleGroup.findIndex(unit => unit.panelId===this.props.panelStyle.panelId);\r\n        // console.log(index)\r\n        if(index>=0){\r\n            if(this.props.panelStyle.styleData.fontSize !== this.state.panelUnitStyleGroup[index].styleData.fontSize ||\r\n                this.props.panelStyle.styleData.color !== this.state.panelUnitStyleGroup[index].styleData.color ||\r\n                this.props.panelStyle.styleData.backgroundColor !== this.state.panelUnitStyleGroup[index].styleData.backgroundColor ||\r\n                this.props.panelStyle.styleData.fontFamily !== this.state.panelUnitStyleGroup[index].styleData.fontFamily ||\r\n                this.props.panelStyle.styleData.fontVariant !== this.state.panelUnitStyleGroup[index].styleData.fontVariant ) {\r\n                const newStyleData =  {...this.props.panelStyle.styleData};\r\n                const newPanelUnitStyleGroup = [...this.state.panelUnitStyleGroup];\r\n                const panelUnitIndex= newPanelUnitStyleGroup.findIndex(panelUnitStyle=> panelUnitStyle.panelId===this.props.panelStyle.panelId);\r\n                const newPanelUnitStyle = {...newPanelUnitStyleGroup[panelUnitIndex], styleData: newStyleData};\r\n                newPanelUnitStyleGroup[panelUnitIndex] = newPanelUnitStyle;\r\n                this.setState({panelUnitStyleGroup: newPanelUnitStyleGroup});\r\n        }  \r\n        }  \r\n    }\r\n\r\n    addPanelUnit = () => {\r\n        let panelUnitIndex = this.state.panelUnitStyleGroup.reduce((maxId,el)=> el.panelId>maxId ? el.panelId : maxId ,0) + 1;\r\n        \r\n        const panelStyle = {\r\n            panelId: panelUnitIndex,\r\n            styleData: {\r\n                fontSize: 10,\r\n                fontCategory: 'All',\r\n                fontFamily: '',\r\n                fontVariant: '',\r\n                color: {\r\n                    r: '0',\r\n                    g: '0',\r\n                    b: '0',\r\n                    a: '1',\r\n                },\r\n                backgroundColor: {\r\n                    r: '255',\r\n                    g: '255',\r\n                    b: '255',\r\n                    a: '1',\r\n                },\r\n            }\r\n        }\r\n        const newGroup = [...this.state.panelUnitStyleGroup];\r\n        newGroup.push(panelStyle);\r\n        this.setState({panelUnitStyleGroup: newGroup});\r\n    }\r\n\r\n    deletePanelUnit = (panelId) => {\r\n        const newGroup = [...this.state.panelUnitStyleGroup];\r\n        const index = newGroup.findIndex(unit => unit.panelId===panelId);\r\n        newGroup.splice(index,1);\r\n        this.setState({panelUnitStyleGroup: newGroup});\r\n    }\r\n\r\n    panelUnitChangedHandler = (panelStyle) => {\r\n        this.props.panelChanged(panelStyle);\r\n    }\r\n\r\n\r\n    render() {\r\n        const panelUnits = this.state.panelUnitStyleGroup.map(\r\n                panelUnitStyle => <PanelUnit key={panelUnitStyle.panelId}  deletePanelUnit={()=> this.deletePanelUnit(panelUnitStyle.panelId)} addPanelUnit={this.addPanelUnit}    panelId={panelUnitStyle.panelId}   styleData={panelUnitStyle.styleData}  panelUnitChanged={() => this.panelUnitChangedHandler({...panelUnitStyle})} /> );\r\n        return (\r\n            <div  className={classes.Panel}>\r\n                {panelUnits}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        panelStyle: state.styleControl.panelStyle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        panelChanged: (panelStyle) => dispatch(styleControlActionCreator.panelChanged(panelStyle))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextPanel);","import * as actionType from '../actionType/actionType'\r\n\r\nexport const fontDataLoad = (fontData) => {\r\n    return {\r\n        type: actionType.LOAD_FONT_DATA,\r\n        data: fontData\r\n    }\r\n}\r\n\r\nexport const panelChanged = (panelId) => {\r\n    return {\r\n        type: actionType.PANEL_UNIT_CHANGED,\r\n        data: panelId\r\n    }\r\n}\r\n\r\nexport const fontSizeChanged = (fontSizeDate) => {\r\n    return {\r\n        type: actionType.FONT_SIZE_CHANGED,\r\n        data: fontSizeDate\r\n    }\r\n}\r\n\r\nexport const colorChanged = (color) => {\r\n    return {\r\n        type: actionType.COLOR_CHANGED,\r\n        data: color\r\n    }\r\n}\r\n\r\nexport const backgroundColorChanged = (color) => {\r\n    return {\r\n        type: actionType.BACKGROUND_COLOR_CHANGED,\r\n        data: color\r\n    }\r\n}\r\n\r\n\r\nexport const fontFamilyChanged = (fontFamilyData) => {\r\n    return {\r\n        type: actionType.FONT_FAMILY_CHANGED,\r\n        data: fontFamilyData\r\n    }\r\n}\r\n\r\nexport const fontVariantChanged = (fontVariantData) => {\r\n    return {\r\n        type: actionType.FONT_VARIANT_CHANGED,\r\n        data: fontVariantData\r\n    }\r\n}\r\n\r\nexport const fontCategoryChanged = (fontCategoryData) => {\r\n    return {\r\n        type: actionType.FONT_CATEGORY_CHANGED,\r\n        data: fontCategoryData\r\n    }\r\n}\r\n\r\n\r\n\r\n","export const PANEL_UNIT_CHANGED = 'PANEL_UNIT_CHANGED';\r\nexport const FONT_SIZE_CHANGED = 'FONT_SIZE_CHANGED';\r\nexport const COLOR_CHANGED = 'COLOR_CHANGED';\r\nexport const BACKGROUND_COLOR_CHANGED = 'BACKGROUND_COLOR_CHANGED';\r\nexport const FONT_FAMILY_CHANGED = 'FONT_FAMILY_CHANGED';\r\nexport const FONT_VARIANT_CHANGED = 'FONT_VARIANT_CHANGED';\r\nexport const FONT_CATEGORY_CHANGED = 'FONT_CATEGORY_CHANGED';\r\nexport const LOAD_FONT_DATA = 'LOAD_FONT_DATA';","import React from 'react';\r\nimport classes from './fontSizeController.css';\r\n\r\nconst fontSizeController = (props) => {\r\n    return (\r\n        <div className={classes.FontSizeController}>\r\n            <label className={classes.FontSizeLabel}>Font Size</label>\r\n            <input className={classes.FontSizeInput} value={props.sizeValue} onChange={props.fontSizeChangedHandler} min='9' max='100' type =\"number\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default fontSizeController;","import React, {Component} from 'react';\r\n\r\nclass OutSideClicker extends Component {\r\n\r\n    children_ref = [];\r\n\r\n    setWrapperRef = (node) => {\r\n        this.wrapperRef = node;\r\n      }\r\n    \r\n    componentDidMount() {\r\n        document.addEventListener('click', this.outsideClickHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.outsideClickHandler);\r\n    }\r\n\r\n    outsideClickHandler = (event) => {\r\n        if(this.wrapperRef && !this.wrapperRef.contains(event.target)){\r\n            console.log(this.wrapperRef);\r\n            console.log(event.target);\r\n            this.children_ref.forEach(child_ref => child_ref.current.handleClickOutside());\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        if(this.children_ref.length===0){\r\n            for(var i=0; i<React.Children.count(this.props.children);i++){\r\n                this.children_ref.push(React.createRef());\r\n            }\r\n        }\r\n        \r\n        const children = React.Children.map(this.props.children,\r\n            (child, index) => React.cloneElement(child, {\r\n              ref : this.children_ref[index]\r\n            })\r\n           );\r\n\r\n        return (\r\n            <div className='sdf' style={{width: '100%' , height: '100%'}} ref={this.setWrapperRef}>{children}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OutSideClicker\r\n","import React, {Component} from 'react';\r\nimport {SketchPicker} from 'react-color'\r\nimport clickOutside from 'react-click-outside';\r\nimport ClickOutsidePPL from '../../../outsideClicker/outsideClicker';\r\nimport classes from './colorPicker.css';\r\nclass ColorPicker extends Component {\r\n    \r\n    state = {     \r\n        displayColorPicker: false,\r\n        pickerIconColor: {\r\n                r: '0',\r\n                g: '0',\r\n                b: '0',\r\n                a: '1',\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    handleClickOutside() {\r\n        this.setState({displayColorPicker: false});\r\n    }\r\n\r\n    handleColorChange = (color, event) => {\r\n        this.props.colorChangedHandler(color.rgb);\r\n    }\r\n\r\n    ColorPickerToggleHandler = () => {\r\n        this.setState((prevState => {\r\n            return {displayColorPicker: !prevState.displayColorPicker};\r\n        }));\r\n    }\r\n\r\n    render() {\r\n\r\n        let colorStyle = {\r\n            color: `rgba(${this.props.color.r}, ${this.props.color.g}, ${this.props.color.b}, ${this.props.color.a})`\r\n        }\r\n\r\n        let PickerIcon = (\r\n            <div onClick={this.ColorPickerToggleHandler} className={classes.ColorPickerIcon} style={colorStyle} >\r\n                    T\r\n            </div>\r\n        )\r\n        if(this.props.BackgroundColor) {\r\n            colorStyle = {\r\n                backgroundColor: `rgba(${this.props.color.r}, ${this.props.color.g}, ${this.props.color.b}, ${this.props.color.a})`\r\n            }\r\n\r\n            PickerIcon = (\r\n                <div onClick={this.ColorPickerToggleHandler} className={classes.ColorPickerIcon} style={colorStyle} >\r\n                </div>\r\n            )   \r\n        }\r\n\r\n        return (\r\n            \r\n            <div className={classes.ColorPicker}>\r\n                {PickerIcon}\r\n                \r\n                \r\n                <div className={classes.SketchPicker}>\r\n                   {this.state.displayColorPicker ?  <SketchPicker color={this.props.color} onChange={ this.handleColorChange } /> : null} \r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n// export default clickOutside(ColorPicker);\r\nexport default  ColorPicker;","import React from 'react';\r\nimport classes from './textColorController.css';\r\nimport ColorPicker from '../colorPicker/colorPicker';\r\nimport OutsideClick from '../../../outsideClicker/outsideClicker';\r\n\r\nconst textColorController = (props) => (\r\n    <div className={classes.TextColorController}>\r\n        <label className={classes.TextColorLabel}>Text Color</label>\r\n        <div className={classes.ColorPicker}>\r\n            <OutsideClick>\r\n                <ColorPicker color={props.color} colorChangedHandler= {props.colorChangedHandler} />\r\n            </OutsideClick>\r\n        </div>\r\n        \r\n    </div>\r\n)\r\n\r\nexport default textColorController;","import React from 'react';\r\nimport classes from './backgroundColorController.css';\r\nimport ColorPicker from '../colorPicker/colorPicker';\r\nimport OutsideClick from '../../../outsideClicker/outsideClicker';\r\n\r\nconst BackgroundColorController = (props) => (\r\n    <div className={classes.BackgroundColorController}>\r\n        <label className={classes.TextColorLabel}>Background Color</label>\r\n        <div className={classes.ColorPicker}>\r\n            <OutsideClick>\r\n            <ColorPicker BackgroundColor color={props.color} colorChangedHandler= {props.colorChangedHandler} />\r\n            </OutsideClick>\r\n        </div>\r\n        \r\n    </div>\r\n)\r\n\r\nexport default BackgroundColorController;","import React from 'react';\r\nimport Select from 'react-select';\r\nimport classes from './fontFamilyController.css'\r\nconst fontFamilyController = (props) => {\r\n    return (\r\n        <div className={classes.FontFamilyController}>\r\n            <label className={classes.FontFamilyLabel}>Font Family</label>\r\n            <div className={classes.FontFamilySelector}>\r\n                <Select value={props.value}  onChange={props.onChange} options={props.options} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default fontFamilyController;","import React from 'react';\r\nimport Select from 'react-select';\r\nimport classes from './fontVariantsController.css'\r\nconst fontVariantsController = (props) => {\r\n    return (\r\n        <div className={classes.FontVariantsController}>\r\n            <label className={classes.FontVariantsLabel}>Font Variants</label>\r\n            <div className={classes.FontVariantsSelector}>\r\n                <Select value={props.value}  isDisabled={props.isDisabled} options={props.options} onChange={props.onChange} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default fontVariantsController;","import React from 'react';\r\nimport classes from './fontCategoryItem.css';\r\n\r\nconst fontCategoryItem = (props) => {\r\n    let attachedClasses = [classes.ItemLable];\r\n    if(props.checked){\r\n        attachedClasses = [classes.ItemLable, classes.ItemChecked];\r\n    }\r\n    return (\r\n        <div>\r\n            <label className={attachedClasses.join(' ')}>\r\n                <span>\r\n                    {props.value}\r\n                </span>\r\n                <input type='radio' value={props.value}  \r\n                       name='category' onChange={props.onChange} \r\n                       checked={props.checked} />\r\n            </label>\r\n            \r\n        </div>\r\n    );\r\n} ;\r\n\r\nexport default fontCategoryItem;","import React from 'react';\r\nimport classes from './fontCategoryController.css';\r\nimport FontCategoryItem from './fontCategoryItem/fontCategoryItem';\r\nconst fontCategoryController = (props) => {\r\n\r\n    const categoryItems = props.categoryItems.map(item =>\r\n                        <li className={classes.CategoryItem}\r\n                            key={item}><FontCategoryItem value={item} \r\n                                                         onChange={props.onChange} \r\n                                                         checked={item===props.categoryValue} />\r\n                        </li>);\r\n\r\n    return (\r\n        <div className={classes.FontCategoryController}>\r\n            <label className={classes.Lable} >Font Category</label>\r\n            <div className={classes.FontCategoryWrapper}>\r\n                <ul className={classes.CategoryItems}>\r\n                    {categoryItems}\r\n                </ul>          \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default fontCategoryController;\r\n","\r\nimport axios from 'axios';\r\nconst API_key= 'AIzaSyCNidLuwgX7aOiINpUSPTbrUdScPXoMIvU';\r\nconst instance = axios.create({\r\n    baseURL: `https://www.googleapis.com/webfonts/v1/webfonts?key=${API_key}`\r\n});\r\n\r\nexport default instance;","import React, {Component} from 'react';\r\nimport classes from './styleController.css';\r\nimport FontSizeController from './fontSizeController/fontSizeController';\r\nimport TextColorController from './textColorController/textColorController';\r\nimport BackgroundColorController from './backgroundColorController/backgroundColorController';\r\nimport FontFamilyController from './fontFamilyController/fontFamilyController';\r\nimport FontVariantsController from './fontVariantsController/fontVariantsController';\r\nimport FontCategoryController from './fontCategoryController/fontCategoryController';\r\nimport axios from '../../axios/axios'\r\nimport {connect} from  'react-redux';\r\nimport * as styleControlActionCreator from '../../store/styleControl/action/actionCreator/actionCreator'\r\n\r\nclass StyleController extends Component {\r\n\r\n    state = {\r\n        availableFontCategory: [],\r\n        availableFontFamilies: [],\r\n        availableFontVariants: []\r\n        \r\n        // isFontVariantsDisplayClear: false\r\n        \r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        // if(this.props.panelStyle.styleData.fontFamily!==''){\r\n        //     const new_variants = this.state.availableFontFamilies.find(FontFamily => FontFamily.family === this.props.panelStyle.styleData.fontFamily).variants;          \r\n        //     if(new_variants.join() !== this.state.availableFontVariants.join()){\r\n        //         const new_availableFontVariants = [...new_variants];\r\n        //         this.setState({availableFontVariants: new_availableFontVariants});\r\n        //     }  \r\n        // }  \r\n       if(this.props.panelStyle.styleData.fontFamily === '' && this.props.panelStyle.styleData.fontVariant === ''){\r\n           if(this.state.availableFontVariants.length>0){\r\n            this.setState({availableFontVariants: []});\r\n           }\r\n       }\r\n       const new_families = this.props.panelStyle.fontData.filter(font =>{\r\n                                if(this.props.panelStyle.styleData.fontCategory==='All'){\r\n                                    return true;\r\n                                }\r\n                                else{\r\n                                    return font.category === this.props.panelStyle.styleData.fontCategory;\r\n                                }\r\n                            })\r\n        const just_familyName_new = new_families.map(FontFamily => FontFamily.family);\r\n        const just_familyName_prev = this.state.availableFontFamilies.map(FontFamily => FontFamily.family);\r\n        if(just_familyName_new.join() !== just_familyName_prev.join()){\r\n            this.setState({availableFontFamilies: new_families});\r\n        }\r\n        if(this.props.panelStyle.styleData.fontFamily!==''){\r\n            const new_variants = new_families.find(FontFamily => FontFamily.family === this.props.panelStyle.styleData.fontFamily).variants;          \r\n            if(new_variants.join() !== this.state.availableFontVariants.join()){\r\n                const new_availableFontVariants = [...new_variants];\r\n                this.setState({availableFontVariants: new_availableFontVariants});\r\n            }  \r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // axios.get('').then(response => {\r\n        //     const fontData = response.data.items.slice(0,150)\r\n        //     const  availableFontCategory = new Set();\r\n        //     fontData.forEach(DataItem => availableFontCategory.add(DataItem.category));\r\n        //     availableFontCategory.add('All');\r\n        //     console.log(fontData);\r\n        //     this.setState({availableFontFamilies: fontData, availableFontCategory: [...availableFontCategory]});\r\n        // }).catch(err => {\r\n        //     console.log(err);\r\n        // });\r\n        axios.get('').then(response =>{\r\n            const fontData = response.data.items.slice(0,150);\r\n            this.props.fontDataLoad(fontData);\r\n            console.log(fontData);\r\n            const  availableFontCategory = new Set();\r\n            fontData.forEach(DataItem => availableFontCategory.add(DataItem.category));\r\n            availableFontCategory.add('All');\r\n            this.setState({availableFontCategory: [...availableFontCategory], availableFontFamilies: fontData });\r\n\r\n        }).catch(err => {\r\n                console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n    fontSizeChangedHandler = (event) => {\r\n        this.props.fontSizeChanged(event.target.value);\r\n    }\r\n\r\n    colorChangedHandler = (color) => {\r\n        this.props.colorChanged(color);\r\n    }\r\n\r\n    backgroundColorChangedHandler = (color) => {\r\n        this.props.backgroundColorChanged(color);\r\n    }\r\n\r\n\r\n    fontCategoryChangedHandler = (event) => {\r\n        this.props.fontCategoryChanged(event.target.value);\r\n        this.setState({availableFontVariants: []});\r\n    }\r\n\r\n    fontFamilySelectedHandler = (value) => {\r\n        // const new_availableFontVariants = [...value.variants];\r\n        // this.setState({availableFontVariants: new_availableFontVariants});\r\n        this.props.fontFamilyChanged(value.value);\r\n        // this.props.fontVariantsChanged('');\r\n    }\r\n\r\n    fontVariantsSelectedHandler = (value) => {\r\n        // this.setState({isFontVariantsDisplayClear: false});\r\n        this.props.fontVariantsChanged(value.value);\r\n    }\r\n\r\n    \r\n\r\n\r\n    render () {\r\n\r\n        const familyOptions = this.state.availableFontFamilies.map(FontFamily => {return {value:FontFamily.family, label:FontFamily.family, variants: FontFamily.variants}});\r\n        const varientsOptions =  this.state.availableFontVariants.map(FontVarient => {return {value: FontVarient, label: FontVarient}});\r\n        return (\r\n            <div className={classes.StyleController}>\r\n\r\n                <FontCategoryController categoryValue={this.props.panelStyle.styleData.fontCategory}\r\n                                        categoryItems={this.state.availableFontCategory.sort((a,b)=>a.localeCompare(b))}\r\n                                        onChange={this.fontCategoryChangedHandler}/>\r\n                <FontFamilyController  value={familyOptions.filter(FontFamily => FontFamily.value===this.props.panelStyle.styleData.fontFamily)} \r\n                                       options={familyOptions} onChange={this.fontFamilySelectedHandler}  />\r\n                <FontVariantsController value={varientsOptions.filter(FontVariants => FontVariants.value===this.props.panelStyle.styleData.fontVariant)} \r\n                                        options={varientsOptions} onChange={this.fontVariantsSelectedHandler}  \r\n                                        isDisabled={this.state.availableFontVariants.length===0 ? true : false} />   \r\n                <FontSizeController fontSizeChangedHandler={this.fontSizeChangedHandler} sizeValue={this.props.panelStyle.styleData.fontSize} />\r\n                <TextColorController color={this.props.panelStyle.styleData.color} colorChangedHandler={this.colorChangedHandler} />\r\n                <BackgroundColorController color={this.props.panelStyle.styleData.backgroundColor} colorChangedHandler={this.backgroundColorChangedHandler} />\r\n                                      \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        panelStyle: state.styleControl.panelStyle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fontSizeChanged: (fontSize) => dispatch(styleControlActionCreator.fontSizeChanged(fontSize)),\r\n        colorChanged: (color) => dispatch(styleControlActionCreator.colorChanged(color)),\r\n        backgroundColorChanged: (color) => dispatch(styleControlActionCreator.backgroundColorChanged(color)),\r\n        fontCategoryChanged: (fontCategory) => dispatch(styleControlActionCreator.fontCategoryChanged(fontCategory)),\r\n        fontFamilyChanged: (fontFamily) => dispatch(styleControlActionCreator.fontFamilyChanged(fontFamily)),\r\n        fontVariantsChanged: (fontVariants) => dispatch(styleControlActionCreator.fontVariantChanged(fontVariants)),\r\n        fontDataLoad: (fontData) => dispatch(styleControlActionCreator.fontDataLoad(fontData))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StyleController);","import React, { Component } from 'react';\nimport classes from './App.css'\nimport TextPanel from '../conponents/textPanel/textPanel';\nimport StyleController from '../conponents/styleController/styleController';\nclass App extends Component {\n  render() {\n    return (\n     <div className={classes.App}>\n       <TextPanel />\n       <StyleController />\n     </div>\n    );\n  }\n}\n\nexport default App;\n","import * as actionType from '../action/actionType/actionType'\r\n\r\nconst initialState = {\r\n    panelStyle: {\r\n        panelId: 0,\r\n        styleData: {\r\n            fontCategory: 'All',\r\n            fontFamily: '',\r\n            fontVariant: '',\r\n            fontSize: 50,\r\n            color: {\r\n                r: '0',\r\n                g: '0',\r\n                b: '0',\r\n                a: '1',\r\n            },\r\n            backgroundColor: {\r\n                r: '255',\r\n                g: '255',\r\n                b: '255',\r\n                a: '1',\r\n            },\r\n        },\r\n        fontData: [],\r\n        isFontVariantsDisplayClear: false\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let newPanelStyle;\r\n    let newStyleData;\r\n    switch (action.type){\r\n        case actionType.FONT_SIZE_CHANGED:\r\n            newStyleData = {...state.panelStyle.styleData, fontSize: action.data};\r\n            newPanelStyle = {...state.panelStyle, styleData: newStyleData, isFontVariantsDisplayClear: false };\r\n            return {...state, panelStyle: newPanelStyle};\r\n\r\n        case actionType.PANEL_UNIT_CHANGED:\r\n            newPanelStyle = {...state.panelStyle, ...action.data }\r\n             return {...state, panelStyle: newPanelStyle};\r\n\r\n        case actionType.COLOR_CHANGED:\r\n            newStyleData = {...state.panelStyle.styleData, color: action.data};\r\n            newPanelStyle = {...state.panelStyle, styleData: newStyleData};\r\n            return {...state, panelStyle: newPanelStyle};\r\n\r\n        case actionType.BACKGROUND_COLOR_CHANGED:\r\n            newStyleData = {...state.panelStyle.styleData, backgroundColor: action.data};\r\n            newPanelStyle = {...state.panelStyle, styleData: newStyleData};\r\n            return {...state, panelStyle: newPanelStyle};   \r\n\r\n        case actionType.FONT_CATEGORY_CHANGED:\r\n            newStyleData = {...state.panelStyle.styleData, fontCategory: action.data, fontFamily:'', fontVariant:''};\r\n            newPanelStyle = {...state.panelStyle, styleData: newStyleData, isFontVariantsDisplayClear: true};\r\n            return {...state, panelStyle: newPanelStyle};    \r\n        \r\n        case actionType.FONT_FAMILY_CHANGED:\r\n            newStyleData = {...state.panelStyle.styleData, fontFamily: action.data, fontVariant:''};\r\n            newPanelStyle = {...state.panelStyle, styleData: newStyleData, isFontVariantsDisplayClear: true};\r\n            return {...state, panelStyle: newPanelStyle};\r\n        \r\n        case actionType.FONT_VARIANT_CHANGED:\r\n            newStyleData = {...state.panelStyle.styleData, fontVariant: action.data};\r\n            newPanelStyle = {...state.panelStyle, styleData: newStyleData, isFontVariantsDisplayClear: false};\r\n            return {...state, panelStyle: newPanelStyle };\r\n       \r\n        case actionType.LOAD_FONT_DATA:\r\n            newPanelStyle = {...state.panelStyle, fontData: action.data};\r\n            return {...state, panelStyle: newPanelStyle };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classes from './index.css'\nimport App from './containers/App';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport styleControlReducer from './store/styleControl/reducer/reducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n    styleControl: styleControlReducer\n});\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorPicker\":\"colorPicker__ColorPicker__2t36w\",\"ColorPickerIcon\":\"colorPicker__ColorPickerIcon__wSpXJ\",\"SketchPicker\":\"colorPicker__SketchPicker__2cSp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontSizeController\":\"fontSizeController__FontSizeController__14ZGz\",\"FontSizeInput\":\"fontSizeController__FontSizeInput__ueKYw\",\"FontSizeLabel\":\"fontSizeController__FontSizeLabel__vZGdJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextColorController\":\"textColorController__TextColorController__3W08B\",\"ColorPicker\":\"textColorController__ColorPicker__2Q10k\",\"TextColorLabel\":\"textColorController__TextColorLabel__ySDoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackgroundColorController\":\"backgroundColorController__BackgroundColorController__2zSPN\",\"ColorPicker\":\"backgroundColorController__ColorPicker__cx6cJ\",\"TextColorLabel\":\"backgroundColorController__TextColorLabel__3jdxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontFamilyController\":\"fontFamilyController__FontFamilyController__2GH8N\",\"FontFamilySelector\":\"fontFamilyController__FontFamilySelector__2B2H5\",\"FontFamilyLabel\":\"fontFamilyController__FontFamilyLabel__3uEMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontVariantsController\":\"fontVariantsController__FontVariantsController__wurHS\",\"FontVariantsSelector\":\"fontVariantsController__FontVariantsSelector__2s_9s\",\"FontVariantsLabel\":\"fontVariantsController__FontVariantsLabel__3fSMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemLable\":\"fontCategoryItem__ItemLable__1YZEQ\",\"ItemChecked\":\"fontCategoryItem__ItemChecked__IFIkM\"};"],"sourceRoot":""}